#!/usr/bin/env ansible-playbook
---

- name: manage groups
  group:
    name: "{{ item.name | mandatory }}"
    system: "{{ item.system | default('yes') }}"
    state: "{{ item.state | default('present') }}"
  loop_control:
    label: "{{ item.name | mandatory }}"
  with_items: "{{ ansemjo_usermanagement_groups }}"

- name: manage users
  user:
    name: "{{ item.name | mandatory }}"
    group: "{{ item.group | default(omit) }}"
    groups: "{{ item.groups | default(omit) }}"
    comment: "{{ item.comment | default('Managed by Ansible') }}"
    home: "{{ item.home | default(omit) }}"
    create_home: "{{ item.create_home | default(omit) }}"
    remove: yes
    shell: "{{ item.shell | default(omit) }}"
    skeleton: "{{ item.skeleton | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    system: "{{ item.system | default('yes') }}"
  loop_control:
    label: "{{ item.name | mandatory }}"
  with_items: "{{ ansemjo_usermanagement_users }}"

- name: add authorized keys
  authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ item.1 | mandatory }}"
  loop_control:
    label:
      user: "{{ item.0.name }}"
      key: "{{ item.1[:25] + '...' + item.1[-25:] }}"
  when: (item.0.state | default('present')) == 'present'
  with_subelements:
    - "{{ ansemjo_usermanagement_users }}"
    - authorized_keys

- name: ensure sudo is installed
  package:
    name: sudo
    state: present

- name: ensure clean sudoers file
  file:
    path: "{{ ansemjo_usermanagement_sudoers }}"
    state: absent
  when: ansemjo_usermanagement_cleansudoers | default(true)

- name: configure passwordless sudo for groups
  lineinfile:
    dest: "{{ ansemjo_usermanagement_sudoers }}"
    create: true
    regexp: "^%{{ item.name }}"
    line: "%{{ item.name }} ALL=(ALL) NOPASSWD: ALL"
    state: "{{ 'present' if (((item.state | default('present')) == 'present') and (item.sudo | default(false))) else 'absent' }}"
    validate: visudo -cf %s
  loop_control:
    label:
      group: "{{ item.name }}"
      state: "{{ 'allowed' if (((item.state | default('present')) == 'present') and (item.sudo | default(false))) else 'disallowed' }}"
  with_items: "{{ ansemjo_usermanagement_groups }}"

- name: configure passwordless sudo for users
  lineinfile:
    dest: "{{ ansemjo_usermanagement_sudoers }}"
    create: true
    regexp: "^{{ item.name }}"
    line: "{{ item.name }} ALL=(ALL) NOPASSWD: ALL"
    state: "{{ 'present' if (((item.state | default('present')) == 'present') and (item.sudo | default(false))) else 'absent' }}"
    validate: visudo -cf %s
  loop_control:
    label:
      user: "{{ item.name }}"
      state: "{{ 'allowed' if (((item.state | default('present')) == 'present') and (item.sudo | default(false))) else 'disallowed' }}"
  with_items: "{{ ansemjo_usermanagement_users }}"
